#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble

\usepackage{fullpage}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package none
\inputencoding auto
\fontencoding default
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 11
\spacing single
\use_hyperref false
\papersize letterpaper
\use_geometry false
\use_amsmath 2
\use_esint 1
\use_mhchem 0
\use_mathdots 0
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
Zackery Field
\end_layout

\begin_layout Standard
ID: 23031734
\end_layout

\begin_layout Standard
CS 70, Summer 2013
\end_layout

\begin_layout Standard
Homework 2
\end_layout

\begin_layout Standard
Problem 3 [13 Points] 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Enumerate
[13 Points] Fitting med students to hospitals with the stable marriage algorithm.
\end_layout

\begin_deeper
\begin_layout Enumerate
[5 Points] Modify the propose-and-reject alogrithm from class so that it
 finds a stable assignment of medical students to slots.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $q_{h}=numberOfSpots$
\end_inset

, for a hospital 
\begin_inset Formula $h$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $n=numberOfStudents$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $s=particularStudent$
\end_inset


\begin_inset Newline newline
\end_inset

and, 
\begin_inset Formula $\sum q_{h}<n$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Apply-and-reject Algorithm:
\begin_inset Newline newline
\end_inset

On week 1, each student, s, applies to the school at the top of their preference
 list.
 Then, from those applications, each hospital, h, populates its waitlist
 (of length 
\begin_inset Formula $q_{h}$
\end_inset

) based on their respective preference lists.
 All students that do not make it onto the waitlist for the first week are
 immediately rejected, and they remove the rejecting school from their preferenc
e list.
 The next week, each student once again applies to the school at the top
 of their (possibly revised) preference list, and based on the applications
 it receives, each hospital updates their respective waitlists.
 This continues, week after week, until all the schools receive as many
 applications as they have spots on their waitlists.
 When this occurs, all students placed on the final waitlist are accepted
 to the school they are waitlisted at.
 
\end_layout

\begin_layout Enumerate
[7 Points] Give a proof that the above algorithm does indeed find a stable
 assignment.
 The Improvement Lemma should be applied.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Theorem: The apply-and-reject algorithm (detailed above) always gives a
 stable assignment.
\begin_inset Newline newline
\end_inset

Improvement Lemma: For each hospital, after its waitlist becomes full, its
 least favorite student on the waitlist can only improve over time.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Direct Proof:
\begin_inset Newline newline
\end_inset

It can be shown that there is no student in a rogue pairing with a hospital.
 Let (s,h) be some pairing of student to hospital such that s prefers some
 hospital h* to h.
 We can show that h* prefers s* to s, therefore eliminating the possibility
 that (s,h*) is a rogue pairing.
 Since h* is higher on the preference list of s than h, s must have applied
 to h* first and had been rejected.
 Utilizing the Improvement Lemma, h* has a set of students of number 
\begin_inset Formula $q_{h*}$
\end_inset

in order of prefence, and the lowest member of that list must improve over
 time.
 Therefore, h* prefers all the students on its waitlist to s, and (s,h*)
 is therefore not a rogue pairing.
 
\begin_inset Newline newline
\end_inset


\end_layout

\end_deeper
\end_body
\end_document
